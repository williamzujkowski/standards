---
name: Standards Compliance Template

'on':
  pull_request:
    branches: [main, master, develop]
  push:
    branches: [main, master, develop]

jobs:
  # Language-agnostic checks
  general-compliance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check file formatting
        run: |
          # Check for trailing whitespace
          # Check for trailing whitespace in markdown and YAML files
          ! grep -r '[[:space:]]$' \
            --include="*.md" --include="*.yml" --include="*.yaml" .

      - name: Validate YAML files
        run: |
          find . -name "*.yml" -o -name "*.yaml" | xargs -I {} yamllint {}

      - name: Check for large files
        run: |
          find . -type f -size +5M -exec ls -lh {} \; | grep -v "\.git"

      - name: Security - Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./

  # Python-specific compliance
  python-compliance:
    if: |
      contains(github.repository, 'python') ||
      contains(github.repository, 'py')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install black isort flake8 mypy pytest pytest-cov safety bandit

      - name: Format check with Black
        run: black --check .

      - name: Import sort check with isort
        run: isort --check-only .

      - name: Lint with flake8
        run: flake8 .

      - name: Type check with mypy
        run: mypy .

      - name: Security check with bandit
        run: bandit -r . -ll

      - name: Test with coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-fail-under=85

  # JavaScript/TypeScript compliance
  javascript-compliance:
    if: >
      contains(github.repository, 'js') ||
      contains(github.repository, 'ts') ||
      contains(github.repository, 'node')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Lint check
        run: npm run lint

      - name: Type check (TypeScript)
        if: contains(github.repository, 'ts')
        run: npm run type-check

      - name: Test with coverage
        run: npm run test:coverage

      - name: Security audit
        run: npm audit --audit-level=high

  # Go compliance
  go-compliance:
    if: contains(github.repository, 'go')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Format check
        run: |
          gofmt -l .
          test -z $(gofmt -l .)

      - name: Vet
        run: go vet ./...

      - name: Test with coverage
        run: |
          go test -coverprofile=coverage.out -covermode=atomic ./...
          go tool cover -func=coverage.out | grep total | \
            awk '{print $3}' | sed 's/%//g' | \
            awk '{if ($1 < 85) {
              print "Coverage is below 85%: " $1 "%"; exit 1}}'

  # Performance and accessibility checks (for web projects)
  web-compliance:
    if: |
      contains(github.repository, 'web') ||
      contains(github.repository, 'frontend')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Accessibility check
        uses: a11ywatch/github-action@v2
        with:
          WEBSITE_URL: ${{ github.event.repository.homepage }}
          WCAG_LEVEL: AA
