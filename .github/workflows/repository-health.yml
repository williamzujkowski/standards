name: Repository Health Check

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  pull_request:
    paths:
      - '**'
      - '!docs/**'
      - '!*.md'

jobs:
  check-ignored-files:
    name: Check for Ignored Patterns
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check for files that should be ignored
        run: |
          echo "Checking for files that should be in .gitignore..."

          # Check for Python cache files
          if find . -type d -name "__pycache__" | grep -q .; then
            echo "❌ Found __pycache__ directories that should be ignored"
            exit 1
          fi

          # Check for .pyc files
          if find . -type f -name "*.pyc" | grep -q .; then
            echo "❌ Found .pyc files that should be ignored"
            exit 1
          fi

          # Check for backup files
          if find . -type f \( -name "*.bak" -o -name "*.orig" -o -name "*.tmp" \) | grep -q .; then
            echo "❌ Found backup files that should be ignored"
            exit 1
          fi

          # Check for IDE files
          if [ -d ".vscode" ] && git ls-files .vscode | grep -q .; then
            echo "❌ Found tracked .vscode files"
            exit 1
          fi

          echo "✅ No ignored patterns found in repository"

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  large-file-check:
    name: Check for Large Files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check for large files
        run: |
          echo "Checking for large files (>1MB)..."

          # Find files larger than 1MB
          large_files=$(find . -type f -size +1M ! -path "./node_modules/*" ! -path "./.git/*" ! -path "./venv/*" ! -path "./dist/*")

          if [ -n "$large_files" ]; then
            echo "⚠️ Found large files (>1MB):"
            echo "$large_files"
            echo ""
            echo "Consider using Git LFS for these files or reducing their size"
          else
            echo "✅ No large files found"
          fi

  cleanup-old-artifacts:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@v3

      - name: Cleanup old monitoring data
        run: |
          echo "Cleaning up old monitoring data..."

          # Remove monitoring logs older than 30 days
          if [ -d "monitoring/logs" ]; then
            find monitoring/logs -type f -name "*.log" -mtime +30 -delete || true
            echo "✅ Cleaned up old log files"
          fi

          # Remove old metrics older than 30 days
          if [ -d "monitoring/metrics" ]; then
            find monitoring/metrics -type f -name "*.json" -mtime +30 -delete || true
            echo "✅ Cleaned up old metrics"
          fi

          # Remove old health reports older than 30 days
          if [ -d "monitoring/health" ]; then
            find monitoring/health -type f -name "*.json" -mtime +30 ! -name "latest_*.json" -delete || true
            echo "✅ Cleaned up old health reports"
          fi

  validate-structure:
    name: Validate Repository Structure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check required directories exist
        run: |
          echo "Validating repository structure..."

          required_dirs=(
            "docs/standards"
            "docs/core"
            "docs/guides"
            "docs/nist"
            "examples"
            "scripts"
            "tests"
            ".github/workflows"
          )

          all_exist=true
          for dir in "${required_dirs[@]}"; do
            if [ ! -d "$dir" ]; then
              echo "❌ Missing required directory: $dir"
              all_exist=false
            else
              echo "✅ Found: $dir"
            fi
          done

          if [ "$all_exist" = false ]; then
            exit 1
          fi

          echo "✅ All required directories present"

  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Check Python dependencies
        run: |
          echo "Checking Python dependencies..."

          # Check for outdated dependencies
          pip list --outdated || true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Check Node.js dependencies
        if: hashFiles('standards/compliance/package.json') != ''
        run: |
          echo "Checking Node.js dependencies..."
          cd standards/compliance
          npm outdated || true
          npm audit || true
