;; PgBouncer Configuration File
;; Version: 1.0.0
;; Description: Production-ready PostgreSQL connection pooling configuration

;; ============================================================================
;; DATABASE CONNECTIONS
;; ============================================================================

[databases]

;; Production database
myapp = host=localhost port=5432 dbname=myapp_production

;; Separate pool for analytics queries
myapp_analytics = host=localhost port=5432 dbname=myapp_production pool_size=10

;; Read replica connection
myapp_replica = host=replica.example.com port=5432 dbname=myapp_production

;; Test environment
myapp_test = host=localhost port=5432 dbname=myapp_test pool_size=5

;; Fallback to template1 for testing
* = host=localhost port=5432

;; ============================================================================
;; PGBOUNCER SETTINGS
;; ============================================================================

[pgbouncer]

;; Network Configuration
listen_addr = 0.0.0.0
listen_port = 6432

;; Unix socket (optional, for local connections)
unix_socket_dir = /var/run/pgbouncer
unix_socket_mode = 0777

;; ============================================================================
;; AUTHENTICATION
;; ============================================================================

;; Authentication type
;; - trust: no authentication required (NOT RECOMMENDED for production)
;; - plain: plain text password (use with SSL)
;; - md5: MD5 hashed password (most common)
;; - scram-sha-256: SCRAM-SHA-256 authentication (PostgreSQL 10+)
auth_type = md5

;; Authentication file
;; Format: "username" "password"
auth_file = /etc/pgbouncer/userlist.txt

;; Query to load user passwords from database
;; auth_query = SELECT usename, passwd FROM pg_shadow WHERE usename=$1

;; ============================================================================
;; CONNECTION POOLING
;; ============================================================================

;; Pool mode
;; - session: one connection per client connection (most compatible)
;; - transaction: one connection per transaction (recommended for most apps)
;; - statement: one connection per statement (aggressive, may break some apps)
pool_mode = transaction

;; Maximum number of client connections
max_client_conn = 1000

;; Default pool size (connections per user+database pair)
;; Formula: (CPU cores Ã— 2) + effective_spindle_count
;; Example: 8 cores + 2 SSDs = 18 connections
default_pool_size = 25

;; Minimum pool size (keep-alive connections)
min_pool_size = 5

;; Additional connections for sudden load spikes
reserve_pool_size = 5

;; How long to wait for a connection from reserve pool (seconds)
reserve_pool_timeout = 3

;; Maximum number of connections per database
max_db_connections = 100

;; Maximum number of connections per user
max_user_connections = 100

;; ============================================================================
;; TIMEOUTS
;; ============================================================================

;; Close server connection if idle for this long (seconds)
server_idle_timeout = 600

;; Close server connection if connected for this long (seconds)
;; Prevents issues with stale connections
server_lifetime = 3600

;; Maximum time to wait for server connection (seconds)
server_connect_timeout = 15

;; Cancel query if it takes longer than this (0 = disabled)
query_timeout = 0

;; Cancel client connection if waiting for query longer than this (seconds)
query_wait_timeout = 120

;; Cancel client connection if idle for this long (seconds)
client_idle_timeout = 0

;; Close client connection if login takes longer than this (seconds)
client_login_timeout = 60

;; If client_idle_timeout is set, also close idle client connections after this (seconds)
autodb_idle_timeout = 3600

;; ============================================================================
;; LOGGING
;; ============================================================================

;; Log file location
logfile = /var/log/pgbouncer/pgbouncer.log

;; PID file
pidfile = /var/run/pgbouncer/pgbouncer.pid

;; Log level (0-2, 0=debug, 1=info, 2=warning, 3=error, 4=fatal)
log_connections = 0
log_disconnections = 0
log_pooler_errors = 1

;; Log stats interval (seconds, 0 = disabled)
stats_period = 60

;; ============================================================================
;; ADMIN ACCESS
;; ============================================================================

;; Admin users (can access pgbouncer console)
admin_users = postgres, pgbouncer_admin

;; Users who can view statistics
stats_users = postgres, pgbouncer_admin, monitoring

;; ============================================================================
;; PERFORMANCE TUNING
;; ============================================================================

;; DNS lookup caching time (seconds)
dns_max_ttl = 15
dns_zone_check_period = 0

;; TCP socket options
so_reuseport = 1
tcp_keepalive = 1
tcp_keepcnt = 3
tcp_keepidle = 30
tcp_keepintvl = 10

;; User-specified socket options
tcp_user_timeout = 0

;; Buffer sizes (bytes)
pkt_buf = 4096
max_packet_size = 2147483647

;; Server reset query (run when server connection is returned to pool)
;; Cleans up session state
server_reset_query = DISCARD ALL
server_reset_query_always = 0

;; Check if server is alive before returning to pool
server_check_query = select 1
server_check_delay = 30

;; Application name sent to server
application_name_add_host = 1

;; ============================================================================
;; SECURITY
;; ============================================================================

;; Require SSL/TLS
;; - disable: no SSL
;; - allow: allow both SSL and non-SSL
;; - prefer: prefer SSL (default)
;; - require: require SSL
;; - verify-ca: require SSL and verify CA
;; - verify-full: require SSL and verify CA and server name
;client_tls_sslmode = prefer

;; SSL/TLS certificate files
;client_tls_key_file = /etc/pgbouncer/certs/server.key
;client_tls_cert_file = /etc/pgbouncer/certs/server.crt
;client_tls_ca_file = /etc/pgbouncer/certs/ca.crt

;; SSL/TLS for connections to PostgreSQL server
;server_tls_sslmode = prefer
;server_tls_key_file = /etc/pgbouncer/certs/client.key
;server_tls_cert_file = /etc/pgbouncer/certs/client.crt
;server_tls_ca_file = /etc/pgbouncer/certs/ca.crt

;; Disable dangerous commands
disable_pqexec = 0

;; ============================================================================
;; MONITORING
;; ============================================================================

;; Show pool size in SHOW POOLS
;; PgBouncer console commands:
;; - SHOW POOLS: Show pool statistics
;; - SHOW DATABASES: Show database configurations
;; - SHOW STATS: Show traffic statistics
;; - SHOW CLIENTS: Show client connections
;; - SHOW SERVERS: Show server connections
;; - RELOAD: Reload configuration
;; - PAUSE [db]: Pause all connections
;; - RESUME [db]: Resume connections
;; - SHUTDOWN: Shutdown PgBouncer

;; ============================================================================
;; EXAMPLE MONITORING QUERIES
;; ============================================================================

;; Connect to PgBouncer console:
;; psql -h localhost -p 6432 -U postgres pgbouncer

;; View pool status:
;; SHOW POOLS;

;; View active connections:
;; SHOW CLIENTS;
;; SHOW SERVERS;

;; View statistics:
;; SHOW STATS;
;; SHOW STATS_TOTALS;
;; SHOW STATS_AVERAGES;

;; ============================================================================
;; SYSTEMD SERVICE FILE EXAMPLE
;; ============================================================================

;; /etc/systemd/system/pgbouncer.service
;; [Unit]
;; Description=PgBouncer PostgreSQL Connection Pooler
;; After=syslog.target network.target
;;
;; [Service]
;; Type=forking
;; User=postgres
;; Group=postgres
;; ExecStart=/usr/bin/pgbouncer -d /etc/pgbouncer/pgbouncer.ini
;; ExecReload=/bin/kill -HUP $MAINPID
;; KillMode=mixed
;; KillSignal=SIGINT
;; Restart=on-failure
;;
;; [Install]
;; WantedBy=multi-user.target

;; ============================================================================
;; USERLIST.TXT FORMAT
;; ============================================================================

;; /etc/pgbouncer/userlist.txt
;; "username" "md5<md5 hash of password + username>"
;; 
;; Generate MD5 hash:
;; echo -n "passwordusername" | md5sum
;; 
;; Example:
;; "postgres" "md5d8578edf8458ce06fbc5bb76a58c5ca4"
