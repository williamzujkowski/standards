# Pre-commit hooks for Standards Repository
# Enforces standards compliance before commits

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: [--maxkb=5000]
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-case-conflict
      - id: mixed-line-ending
        args: [--fix=lf]

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [--config, .markdownlint.yaml]
        exclude: ^(node_modules|examples|archive)/

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [-c, .yamllint.yaml]

  # Custom standards linting
  - repo: local
    hooks:
      # - id: fix-trailing-whitespace-custom
      #   name: Fix trailing whitespace (comprehensive)
      #   entry: bash fix_trailing_whitespace.sh
      #   language: system
      #   files: \.(md|yml|yaml|py|sh|json|js|ts|tsx|jsx|txt|rst|toml|cfg|ini|xml|html|css|scss|sass)$
      #   pass_filenames: false
      #   stages: [commit]

      - id: standards-metadata
        name: Check standards metadata
        entry: python lint/standards-linter.py
        language: python
        files: _STANDARDS\.md$|UNIFIED_STANDARDS\.md$
        additional_dependencies: [pyyaml]
        pass_filenames: false

      - id: manifest-validation
        name: Validate MANIFEST.yaml
        entry: python tests/validate_cross_references.py
        language: python
        files: MANIFEST\.yaml$
        additional_dependencies: [pyyaml]
        pass_filenames: false
        args: [--check-manifest-only]

      - id: cross-references
        name: Check cross-references
        entry: python tests/validate_cross_references.py
        language: python
        files: \.md$
        additional_dependencies: [pyyaml]
        pass_filenames: false
        args: [--check-links-only]

      - id: token-efficiency
        name: Check token efficiency
        entry: python tests/validate_token_efficiency.py
        language: python
        files: _STANDARDS\.md$
        pass_filenames: false
        args: [--summary-only]

  # Security scanning
  # - repo: https://github.com/Yelp/detect-secrets
  #   rev: v1.4.0
  #   hooks:
  #     - id: detect-secrets
  #       args: [--baseline, .secrets.baseline]

  # Shell script linting (for test scripts)
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        files: \.(sh|bash)$

  # Python code quality (for test and lint scripts)
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        files: \.(py)$
        exclude: ^(archive|vendor)/

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        files: \.(py)$
        args: [--profile, black]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.11
    hooks:
      - id: ruff
        files: \.(py)$
        args: [--fix]

  # Prevent direct commits to main/master
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]
